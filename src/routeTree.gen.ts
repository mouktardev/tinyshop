/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppProductsIndexImport } from './routes/_app/products/index'
import { Route as AppCartIndexImport } from './routes/_app/cart/index'
import { Route as AppProductsProductsImport } from './routes/_app/products/$products'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppProductsIndexRoute = AppProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => AppRoute,
} as any)

const AppCartIndexRoute = AppCartIndexImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => AppRoute,
} as any)

const AppProductsProductsRoute = AppProductsProductsImport.update({
  id: '/products/$products',
  path: '/products/$products',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/products/$products': {
      id: '/_app/products/$products'
      path: '/products/$products'
      fullPath: '/products/$products'
      preLoaderRoute: typeof AppProductsProductsImport
      parentRoute: typeof AppImport
    }
    '/_app/cart/': {
      id: '/_app/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof AppCartIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/products/': {
      id: '/_app/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AppProductsIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppProductsProductsRoute: typeof AppProductsProductsRoute
  AppCartIndexRoute: typeof AppCartIndexRoute
  AppProductsIndexRoute: typeof AppProductsIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppProductsProductsRoute: AppProductsProductsRoute,
  AppCartIndexRoute: AppCartIndexRoute,
  AppProductsIndexRoute: AppProductsIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/': typeof AppIndexRoute
  '/products/$products': typeof AppProductsProductsRoute
  '/cart': typeof AppCartIndexRoute
  '/products': typeof AppProductsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/products/$products': typeof AppProductsProductsRoute
  '/cart': typeof AppCartIndexRoute
  '/products': typeof AppProductsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/products/$products': typeof AppProductsProductsRoute
  '/_app/cart/': typeof AppCartIndexRoute
  '/_app/products/': typeof AppProductsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/products/$products' | '/cart' | '/products'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/products/$products' | '/cart' | '/products'
  id:
    | '__root__'
    | '/_app'
    | '/_app/'
    | '/_app/products/$products'
    | '/_app/cart/'
    | '/_app/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/products/$products",
        "/_app/cart/",
        "/_app/products/"
      ]
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/products/$products": {
      "filePath": "_app/products/$products.tsx",
      "parent": "/_app"
    },
    "/_app/cart/": {
      "filePath": "_app/cart/index.tsx",
      "parent": "/_app"
    },
    "/_app/products/": {
      "filePath": "_app/products/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
